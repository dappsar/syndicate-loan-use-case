/* ------Font size Mixin------- */
@mixin font-size($sizeValue: 12 ){
    font-size: $sizeValue + px; //fallback for old browsers
    // font-size: (0.125 * $sizeValue) + rem;
  }

/* ------Pdding/Margin Mixin------- */
@mixin padding($values...) {    
    @each $var in $values {
        padding: #{$var};
    }
}
@mixin margin($values...) {    
    @each $var in $values {
        margin: #{$var};
    }
}

/* ------@include transition(all,2s,ease) Mixin------ */
@mixin transition($what: all, $time: 0.2s, $how: ease-in-out) {
    -webkit-transition: $what $time $how;
    -moz-transition:    $what $time $how;
    -ms-transition:     $what $time $how;
    -o-transition:      $what $time $how;
    transition:         $what $time $how;
}

/* -------generic transform--------*/
@mixin transform($transforms) {
    -moz-transform: $transforms;
      -o-transform: $transforms;
     -ms-transform: $transforms;
 -webkit-transform: $transforms;
       transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
  }
   
  // scale
  @mixin scale($scale) {
       @include transform(scale($scale));
  } 
  // translate
  @mixin translate ($x, $y) {
     @include transform(translate($x, $y));
  }
  // skew
  @mixin skew ($x, $y) {
     @include transform(skew(#{$x}deg, #{$y}deg));
  }
  //transform origin
  @mixin transform-origin ($origin) {
      moz-transform-origin: $origin;
           -o-transform-origin: $origin;
          -ms-transform-origin: $origin;
      -webkit-transform-origin: $origin;
            transform-origin: $origin;
  }

/* ------Flex Mixin----- */
@mixin flex {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}
@mixin flex-direction($direction) {
    -webkit-flex-direction: $direction;
       -moz-flex-direction: $direction;
        -ms-flex-direction: $direction;
            flex-direction: $direction;
}
@mixin flex-wrap($wrap) {
    -webkit-flex-wrap: $wrap;
       -moz-flex-wrap: $wrap;
        -ms-flex-wrap: $wrap;
            flex-wrap: $wrap;
}
@mixin justify-content($justify) {
    -webkit-justify-content: $justify;
       -moz-justify-content: $justify;
        -ms-justify-content: $justify;
            justify-content: $justify;
              -ms-flex-pack: $justify;
}
@mixin align-items($align) {
    -webkit-align-items: $align;
       -moz-align-items: $align;
        -ms-align-items: $align;
            align-items : $align;
}
@mixin align-self($align) {
    -webkit-align-self: $align;
       -moz-align-self: $align;
        -ms-align-self: $align;
            align-self: $align;
  }

/* -----Text Overflow Mixin-------- */
@mixin text-truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

/* ------Opacity Mixin------- */ 
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: $opacity * 100;
    filter: alpha(opacity=$opacity-ie); //IE8
}
/* -------Absolute Positioned Mixin----------- */
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
    position: absolute;
  }

/* ------Box-shadow Mixin------ */
@mixin box-shadow($left, $top, $radius, $color) {
	box-shadow: $left $top $radius $color;
	-webkit-box-shadow: $left $top $radius $color;
	-moz-box-shadow: $left $top $radius $color;
}

/* ------clearfix Mixin------ */
@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

/* ----------Button Mixin-------- */

@mixin button-variant($color, $background, $border) {
    color: $color;
    background-color: $background;
    border-color: $border;
    &:focus, &.focus {
      color: $color;
      background-color: darken($background, 10%);
      border-color: darken($border, 25%);
    }
    &:hover {
      color: $color;
      background-color: darken($background, 10%);
      border-color: darken($border, 12%);
    }
    &:active, &.active, .open > &.dropdown-toggle {
      color: $color;
      background-color: darken($background, 10%);
      border-color: darken($border, 12%);
  
      &:hover, &:focus, &.focus {
        color: $color;
        background-color: darken($background, 17%);
        border-color: darken($border, 25%);
      }
    }
    &:active, &.active, .open > &.dropdown-toggle {
      background-image: none;
    }
    &.disabled, &[disabled], fieldset[disabled] & {
      &, &:hover, &:focus, &.focus, &:active, &.active {
        background-color: $background;
        border-color: $border;
      }
    }
   
  }

/* ------Border Radius Mixin-------- */
@mixin border-radius($radius) {
    -webkit-border-radius: $radius;
    border-radius: $radius;
    background-clip: padding-box;  /* stops bg color from leaking outside the border: */
  }
  
// Single side border-radius  
@mixin border-top-radius($radius) {
-webkit-border-top-right-radius: $radius;
border-top-right-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}
@mixin border-right-radius($radius) {
-webkit-border-bottom-right-radius: $radius;
border-bottom-right-radius: $radius;
    -webkit-border-top-right-radius: $radius;
    border-top-right-radius: $radius;
    background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
-webkit-border-bottom-right-radius: $radius;
border-bottom-right-radius: $radius;
    -webkit-border-bottom-left-radius: $radius;
    border-bottom-left-radius: $radius;
    background-clip: padding-box;
}
@mixin border-left-radius($radius) {
-webkit-border-bottom-left-radius: $radius;
border-bottom-left-radius: $radius;
    -webkit-border-top-left-radius: $radius;
    border-top-left-radius: $radius;
    background-clip: padding-box;
}


/* ------Responsive Mixin-------- */

@mixin tablet() {
    @media only screen and (max-width: 1024px) {
        @content;
    }
}
@mixin minTablet() {
    @media only screen and (max-width: 991px) {
        @content;
    }
}